strsplit(name)
strsplit(name,'')
strsplit(name,' ')
as.vector(strsplit(name,' '))
strsplit(name,' ')
name2 = strsplit(name,' ')
paste(name2,sep='@')
paste(name2,collapse='@')
fruitvec = strsplit(fruit, split=' ')[[1]]
print(fruitvec)
paste(fruitvec, c('A', 'B', 'C'), sep='::')
paste(name2,c('gmail.com'),collapse='@')
paste(name2,c('gmail.com'))
name2
paste(name,c('gmail.com'))
paste(name,sep='@')
paste(name,collapse='@')
fruitvec = strsplit(fruit, split=' ')[[1]]
name2 = strsplit(name,' ')[[1]]
name2
paste(name2,sep='@')
paste(name2,c('gmail.com'),sep='@')
paste(name2,c('gmail.com'),sep='@',collapse = ";")
paste(name2,'gmail.com',sep='@',collapse = ";")
Names <- "John Andrew Thomas"
Names2 = strsplit(name,' ')[[1]]
paste(name2,'gmail.com',sep='@',collapse = ";")
Letters = c('a','b','c','d','e')
Letters = c('a','b','c','d','e')
paste(rep(Letters,each=length(y)),y,sep="")
past(Letters)
paste(Letters)
paste(Letters,sep=Letters)
paste(Letters,colapse=Letters)
paste(Letters,Letters colapse=Letters)
paste(Letters,Letters)
sapply(Letters,paste)
Letters = c('a','b','c','d','e')
sapply(Letters,paste,Letters)
sapply(Letters,paste(sep=''),Letters)
sapply(Letters,paste,Letters)
as.vector(sapply(Letters,paste,Letters))
paste(as.vector(sapply(Letters,paste,Letters)),sep='')
paste(as.vector(sapply(Letters,paste,Letters)),collapse='')
paste(as.vector(sapply(Letters,paste,Letters)),collapse=' ')
sep
paste(as.vector(sapply(Letters,paste,Letters)),sep='')
?as.vector
?sapply
?paste
paste(as.vector(sapply(Letters,paste,Letters)),sep='')
as.vector(sapply(Letters,paste,Letters))
as.vector(sapply(Letters,paste(sep=''),Letters))
as.vector(paste(sapply(Letters,paste,Letters),sep='')
as.vector(paste(sapply(Letters,paste,Letters),sep='')
as.vector(paste(sapply(Letters,paste,Letters),sep=''))
as.vector(sapply(Letters,paste,Letters))
sapply(Letters,paste,Letters)
as.vector(sapply(Letters,paste,Letters))
as.vector(sapply(Letters,0paste,Letters))
as.vector(sapply(Letters,opaste,Letters))
as.vector(sapply(Letters,Opaste,Letters))
as.vector(sapply(Letters,paste0,Letters))
Letters = c('a','b','c','d','e')
as.vector(sapply(Letters,paste0,Letters))
compare = function(x,y){
if(nchar(x)==nchar(y)){
cat('Equal Length')
}else{
cat('Not Equal Length')
}
}
compare("EPS568","Summer")
compare = function(x,y){
if(nchar(x)==nchar(y)){
cat('Equal Length')
}else{
cat('Not Equal Length')
}
}
compare("EPS568","Summer")
compare("EPS568","SummerA")
MAD = function(x){
for(i in 1:x){
return(median(abs(x[i]-median(x))))
}
}
MAD = function(values){
return(median(abs(values-median(values))))
}
MAD(8)
MAD(c(2,3,4))
mad(c(2,3,4))
mad(c(2,3,4,10))
MAD(c(2,3,4,10))
?mad
mad(c(2,3,4,10),constant = 1)
MAD = function(values){
return(median(abs(values-median(values))))
}
MAD(c(100,343,456,324))
mad(c(100,343,456,324),constant=1)
matrix(c(1,2,3,4))
matrix(c(1,2,3,4),2)
matrix(c(1,2,3,4),2) * c(1,2)
matrix(c(1,2,3,4),2) * c(1,2,5,7)
fib
fib <- c(0, 1)
i <- 2
while (fib[i] < 4000000) {
fib <- c(fib, fib[i-1] + fib[i])
i <- i + 1
}
fib <- c(0, 1)
i <- 2
while (fib[i] < 4000000) {
fib <- c(fib, fib[i-1] + fib[i])
i <- i + 1
}
fib
fib <- 1
i <- 2
while (fib[i] < 4000000) {
fib <- c(fib, fib[i-1] + fib[i])
i <- i + 1
}
fib <- c(0, 1)
i <- 1
while (fib[i] < 4000000) {
fib <- c(fib, fib[i-1] + fib[i])
i <- i + 1
}
fib
fib <- c(0, 1)
i <- 0
while (fib[i] < 4000000) {
fib <- c(fib, fib[i-1] + fib[i])
i <- i + 1
}
fib <- c(0, 1)
i <- 2
while (fib[i] < 4000000) {
fib <- c(fib, fib[i-1] + fib[i])
i <- i + 1
}
fib
fib <- c(0, 1)
i <- 1
while (fib[i] < 4000000) {
fib <- c(fib, fib[i-1] + fib[i])
i <- i + 1
}
fib
Names <- "John Andrew Thomas"
Names2 = strsplit(name,' ')[[1]]
paste(name2,'gmail.com',sep='@',collapse = ";")
i <- 1
fib <- c()
i <- 1
while (fib[i] < 4000000) {
fib <- c(fib, fib[i-1] + fib[i])
i <- i + 1
}
fib
fib <- c(1)
i <- 1
while (fib[i] < 4000000) {
fib <- c(fib, fib[i-1] + fib[i])
i <- i + 1
}
fib
fib <- c(1,2)
i <- 1
while (fib[i] < 4000000) {
fib <- c(fib, fib[i-1] + fib[i])
i <- i + 1
}
fib
fib = c(1,2)
i = 1
while (fib[i] < 4000000) {
fib = c(fib, fib[i-1] + fib[i])
i = i + 1
}
fib
fib = c(1,2)
c(fib,fib[0])
c(fib,fib[0]) + fib[1]
sum(fib[fib %% 2 == 0 & fib < 4000000])
x <- 0
y <- 1
fib <- c()
while (x < 4000000 & y < 4000000){
x <- x + y
y <- x + y
fib = c(fib, x, y)
}
fib
sum(fib[fib %% 2 == 0 & fib < 4000000])
x <- 0
y <- 1
fib <- c(1:15)
while (x < 4000000 & y < 4000000){
x <- x + y
y <- x + y
fib = c(fib, x, y)
}
fib
sum(fib[fib %% 2 == 0 & fib < 4000000])
x <- 0
y <- 1
fib <- c()
while (x < 4000000 & y < 4000000){
x <- x + y
y <- x + y
fib = c(fib, x, y)
}
fib
sum(fib[fib %% 2 == 0 & fib < 4000000])
x <- 0
y <- 1
fib <- c()
while (x < 4000000 & y < 4000000){
x <- x + y
y <- x + y
fib = c(x, y)
}
fib
x <- 0
y <- 1
fib <- c()
while (x < 4000000 & y < 4000000){
x <- x + y
y <- x + y
fib = c(fib, x, y)
}
fib
c(c(1,2),4,6)
c(c(0),1,3)
c(c(),1,3)
matrix(c(2,3,5,7)
matrix(c(2,3,5,7))
matrix(c(2,3,5,7),)
matrix(c(2,3,5,7),2)
nrow(matrix(c(2,3,5,7),2))
matrix(c(1,2,3,4),2) * c(1,2)
c(1,2) * matrix(c(1,2,3,4),2)
matrix[1,]
matrix(c(1,2,3,4),2)[1]
matrix(c(1,2,3,4),2)[1,]
matrix(c(1,2,3,4),2)[,1]
matrix(c(1,2,3,4),2)
matrix(c(1,2,3,4),2)[,1]
matrix(c(1,2,3,4),2)[,1]*c(1,2)
c(1,2) * matrix(c(1,2,3,4),2)
dim(matrix(c(1,2,3,4),2))
MAT = matrix(c(1,2,3,4),2)
MAT
MAT = matrix(c(1,2,3,4),2)
VEC = c(3,4)
MAT * VEC
for(i in 1:nrow(MAT)){
for(j in 1:ncol(MAT)){
MAT[i]*VEC[j]
}
}
for(i in 1:nrow(MAT)){
for(j in 1:ncol(MAT)){
return(MAT[i]*VEC[j])
}
}
for(i in 1:nrow(MAT)){
for(j in 1:ncol(MAT)){
MAT[i]*VEC[j]
}
}
MAT * VEC
for(i in 1:nrow(MAT)){
for(j in 1:ncol(MAT)){
MAT[i,j]*VEC[j]
}
}
for(i in 1:nrow(MAT)){
for(j in 1:ncol(MAT)){
cat(MAT[i,j]*VEC[j])
}
}
MAT[1,2]
for(i in 1:nrow(MAT)){
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j]
}sum(X)
}
for(i in 1:nrow(MAT)){
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j]
}
sum(X)
}
cat(sum(X))
MAT * VEC
for(i in 1:nrow(MAT)){
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
}
}
Result = c()
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
Reault = c(Result,X)
}
Result = c()
for(i in 1:nrow(MAT)){
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
Reault = c(Result,X)
}
}
Result
Result = c()
for(i in 1:nrow(MAT)){
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
Result = c(Result,X)
}
}
Result
MAT * VEC
matrix(Result,2)
Result = c()
X = 0
}
for(i in 1:nrow(MAT)){
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
Result = c(Result,X)
}
}
matrix(Result,2)
MAT * VEC
Result = c()
for(i in 1:nrow(MAT)){
X=0
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
Result = c(Result,X)
}
}
matrix(Result,2)
MAT * VEC
Result = c()
for(i in 1:nrow(MAT)){
X=0
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
Result = c(Result,X)
}
}
matrix(Result,2)
X=0
Result = c()
for(i in 1:nrow(MAT)){
X=0
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
Result = c(Result,X)
}
}
matrix(Result,2)
Result = c()
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
}
Result = c(Result,X)
for(i in 1:nrow(MAT)){
X=0
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
}
Result = c(Result,X)
}
matrix(Result,2)
Result = c()
Result = c()
for(i in 1:nrow(MAT)){
X=0
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
}
Result = c(Result,X)
}
matrix(Result,2)
Result = c()
for(i in 1:nrow(MAT)){
X=0
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
}
}Result = c(Result,X)
Result = c()
for(i in 1:nrow(MAT)){
X=0
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
}
Result = c(Result,X)
}
matrix(Result,2)
dim(matrix(c(1,2,3,4),2))
c
VEC = c(3,4)
Result = c()
for(i in 1:nrow(MAT)){
X=0
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
}
Result = c(Result,X)
}
matrix(Result,2)
MAT * VEC
MAT
VEC
Result = c()
for(i in 1:nrow(MAT)){
X=0
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
}
Result = c(Result,X)
}
matrix(Result,2)
Result
MAT = matrix(c(1,2,3,4),2)
VEC = c(3,4)
Result = c()
for(i in 1:nrow(MAT)){
X=0
for(j in 1:ncol(MAT)){
X = MAT[i,j]*VEC[j] + X
}
Result = c(Result,X)
}
Result
MAT*VEC
MAT%*%VEC
matrix(Result,2)
library(shiny)
install.packages('shiny')
library(shiny)
runExample('01_hello')
setwd("C:/Users/Stephen/Desktop/git_proj")
setwd("C:/Users/Stephen/Desktop/git_proj/Visualization_Shiny_proj")
shiny::runApp()
runApp()
runApp()
tanz$basin
tanzgrapher = tanz %>% filter(status_group == "non functional", basin= "Pangani")
nrow(tanzgrapher)
library(shiny)
library(data.table)
library(dplyr)
library(tidyr)
library(ggplot2)
library(shinydashboard)
library(plotly)
tanz = read.csv("Pipe_ind.csv")
Pipe_labels = read.csv("Pipe_labels.csv")
tanz = inner_join(tanz,Pipe_labels, by = "id")
# Converting Longitude into Regional mean (There were 1812 total. 807 in Mwanza, 1005 in Shinyanga)
tanz = tanz %>% mutate(longitude = ifelse(longitude == 0 & region == "Mwanza",33.09156, longitude))
tanz = tanz %>% mutate(longitude = ifelse(longitude == 0 & region == "Shinyanga",33.24012, longitude))
# Convertin gps_height into regional mean
tanz = tanz %>% mutate(gps_height = ifelse(gps_height == 0 & region == "Mwanza",1199.643, gps_height))
tanz = tanz %>% mutate(gps_height = ifelse(gps_height == 0 & region == "Shinyanga",1350.982, gps_height))
tanz = tanz %>% mutate(gps_height = ifelse(gps_height == 0 & region == "Tabora",1018.861, gps_height))
tanz = tanz %>% mutate(gps_height = ifelse(gps_height == 0 & region == "Dodoma",1018.861, gps_height))
tanz = tanz %>% mutate(gps_height = ifelse(gps_height == 0 & region == "Mbeya",1018.861, gps_height))
tanz = tanz %>% mutate(gps_height = ifelse(gps_height == 0 & region == "Tanga",667.9148, gps_height))
tanz = tanz %>% mutate(gps_height = ifelse(gps_height == 0 & region == "Kagera",1018.861, gps_height))
tanz = tanz %>% mutate(gps_height = ifelse(gps_height == 0 & region == "Morogoro",405.2507, gps_height))
tanz = tanz %>% mutate(gps_height = ifelse(gps_height == 0 & region == "Mtwara",258.4103, gps_height))
tanz = tanz %>% mutate(gps_height = ifelse(gps_height == 0 & region == "Pwani",667.9148, gps_height))
tanz = tanz %>% mutate(gps_height = ifelse(gps_height == 0 & region == "Dar es Salaam",31.22195, gps_height))
tanz = tanz %>% mutate(gps_height = ifelse(gps_height == 0 & region == "Lindi",213.4183, gps_height))
# Converting Latitude into Regional mean
tanz = tanz %>% mutate(latitude = ifelse(latitude  > -1 & region == "Mwanza",-2.620502, latitude))
tanz = tanz %>% mutate(latitude = ifelse(latitude > -1 & region == "Shinyanga",-3.495696, latitude))
tanz = tanz %>% mutate(latitude = ifelse(latitude  > -1 & region == "Kagera",-1.963501, latitude))
#Remove duplicate rows and rename ----------------------------------
tanz = tanz %>% select(-payment_type, -waterpoint_type_group, -extraction_type_group, -source, -quality_group,
-quantity_group, -management_group, -extraction_type, -num_private, -scheme_name) %>%
rename(source = source_type, extraction_type = extraction_type_class)
# col names for selection dropdown --------------------
tanz_cols = tanz %>% select(region, basin, extraction_type, water_quality, waterpoint_type, payment)
choice <- colnames(tanz_cols)
#selected rows --------------------------------
tanz_sel = tanz %>% select(region, status_group, gps_height, basin, extraction_type, payment,
water_quality, quantity, waterpoint_type, construction_year, longitude, latitude)
tanzgrapher = tanz %>% filter(status_group == "non functional", basin= "Pangani")
nrow(tanzgrapher)
tanzgrapher = tanz %>% filter(status_group == "non functional", basin= "Pangani")
tanzgrapher = tanz %>% filter(status_group == "non functional", basin== "Pangani")
nrow(tanzgrapher)
leaflet(tanzgrapher) %>% addTiles() %>% addMarkers(lng = ~longitude, lat= ~latitude, popup="New York City")
library(leaflet)
leaflet(tanzgrapher) %>% addTiles() %>% addMarkers(lng = ~longitude, lat= ~latitude, popup="New York City")
library(leaflet)
runApp()
runApp()
runApp()
runApp()
